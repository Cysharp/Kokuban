<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".Generated.cs" #>
<#
    var colors = new Dictionary<string, int>()
    {
        { "Black", 30 },
        { "Red", 31 },
        { "Green", 32 },
        { "Yellow", 33 },
        { "Blue", 34 },
        { "Magenta", 35 },
        { "Cyan", 36 },
        { "White", 37 },
        { "Gray", 90 },
        { "Grey", 90 },
        { "BrightBlack", 90 },
        { "BrightRed", 91 },
        { "BrightGreen", 92 },
        { "BrightYellow", 93 },
        { "BrightBlue", 94 },
        { "BrightMagenta", 95 },
        { "BrightCyan", 96 },
        { "BrightWhite", 97 },
    };

    var styles = new Dictionary<string, (int Begin, int End)>()
    {
        { "Bold", (1, 22) },
        { "Faint", (2, 22) },
        { "Dim", (2, 22) },
        { "Italic", (3, 23) },
        { "Underline", (4, 24) },
        { "Inverse", (7, 27) },
        { "Overline", (53, 55) },
    };
#>
/// <auto-generated />
using System;
using Kokuban.AnsiEscape;

namespace Kokuban
{
    public partial class Chalk
    {
<# foreach (var color in colors) { #>
        public static AnsiStyleBuilder <#= color.Key #> => new AnsiStyleBuilder().<#= color.Key #>;
<# } #>
<# foreach (var color in colors) { #>
        public static AnsiStyleBuilder Bg<#= color.Key #> => new AnsiStyleBuilder().Bg<#= color.Key #>;
<# } #>
<# foreach (var style in styles) { #>
        public static AnsiStyleBuilder <#= style.Key #> => new AnsiStyleBuilder().<#= style.Key #>;
<# } #>
    }
    
    public enum KokubanColor
    {
<# foreach (var color in colors) { #>
        <#= color.Key #> = <#= color.Value #>,
<# } #>
    }
}

namespace Kokuban.AnsiEscape
{
    public static partial class AnsiEscapeCode
    {
<# foreach (var color in colors) { #>
        public static (int Begin, int End) <#= color.Key #> { get; } = (<#= color.Value #>, 39);
<# } #>
<# foreach (var color in colors) { #>
        public static (int Begin, int End) Bg<#= color.Key #> { get; } = (<#= color.Value + 10 #>, 49);
<# } #>
<# foreach (var style in styles) { #>
        public static (int Begin, int End) <#= style.Key #> { get; } = (<#= style.Value.Begin #>, <#= style.Value.End #>);
<# } #>
    }

    public partial struct AnsiStyleBuilder
    {
<# foreach (var color in colors) { #>
        public AnsiStyleBuilder <#= color.Key #> => Foreground(KokubanColor.<#= color.Key #>);
<# } #>
<# foreach (var color in colors) { #>
        public AnsiStyleBuilder Bg<#= color.Key #> => Background(KokubanColor.<#= color.Key #>);
<# } #>
    }

}